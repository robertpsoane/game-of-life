{"version":3,"sources":["components/cell/cell.jsx","components/controls/reset.jsx","components/controls/startstop.jsx","components/controls/about.jsx","components/controls/instructions.jsx","components/controls/settings.jsx","components/controls/patterns.jsx","components/controls/navbar.jsx","components/gameOfLife.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","state","id","props","divId","styling","backgroundColor","onMouseDown","this","onMouseEnter","onMouseUp","life","className","style","onContextMenu","e","preventDefault","Component","Reset","showAbout","display","class","role","type","width","onClick","reset","StartStop","start","pause","About","show","hide","Modal","onHide","centered","Header","Title","Body","href","Footer","instructions","Settings","showHowTo","setState","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","for","min","max","step","defaultValue","onChange","setTime","hideAbout","hideHowTo","PatternLink","min_rows","patterns","pattern_arg","min_cols","n_cols","grid_dims","link_class","patternFunc","text","Patterns","pattern_grid","pattern","NavBar","timeOut","PATTERN_GRIDS","gosper","grid","pulsar","test","GameOfLife","mouseDown","running","neighbours","makeGrid","x","y","row","currentRow","col","push","height","navHeight","$","docHeight","Math","window","floor","document","dims","getWidthHeight","changeCell","new_time","val","handleMouseDown","patternType","livingCells","center","getMidPoint","forEach","cell","centerRow","centerCol","shiftRow","shiftCol","newGrid","timeoutHandler","setTimeout","runStep","count","i","neighbour","rown","coln","oldGrid","newRow","countLivingNeighbours","living","console","log","p","handlePattern","componentDidMount","startGame","pauseGame","setTimeOut","map","rowIdx","colIdx","cell_id","handleMouseEnter","handleMouseUp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d43524e5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./cell.css\";\n\nclass Cell extends Component {\n  /** Cell - represents a cell on the board.  Coloured based on\n   * property for life passed in\n   */\n  state = {\n    id: this.props.id,\n    divId: \"cell:\" + this.props.id[0] + \",\" + this.props.id[1],\n  };\n  styling = {\n    backgroundColor: \"black\",\n  };\n\n  contextMenu() {\n    return false;\n  }\n\n  render() {\n    const onMouseDown = this.props.onMouseDown;\n    const onMouseEnter = this.props.onMouseEnter;\n    const onMouseUp = this.props.onMouseUp;\n    const styling = {\n      backgroundColor: this.props.life === \"dead\" ? \"black\" : \"white\",\n    };\n    return (\n      <div\n        id={this.state.divId}\n        className=\"cell\"\n        style={styling}\n        onMouseDown={() => onMouseDown(this.state.id[0], this.state.id[1])}\n        onMouseEnter={() => onMouseEnter(this.state.id[0], this.state.id[1])}\n        onMouseUp={() => onMouseUp()}\n        onContextMenu={(e) => e.preventDefault()}\n      ></div>\n    );\n  }\n}\n\nexport default Cell;\n","import React, { Component } from \"react\";\nimport \"./controls.css\";\n\nclass Reset extends Component {\n  /** Set of control buttons, each are passed a function call via props */\n  state = { showAbout: false };\n\n  render() {\n    return (\n      <div style={{ display: \"inline\" }}>\n        <ul class=\"btn-group controller\" role=\"group\">\n          <li\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            style={{ width: 100 }}\n            onClick={this.props.reset}\n          >\n            Reset\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Reset;\n","import React, { Component } from \"react\";\nimport \"./controls.css\";\n\nclass StartStop extends Component {\n  state = {};\n  render() {\n    return (\n      <ul class=\"btn-group controller\" role=\"group\">\n        <li\n          type=\"button\"\n          class=\"btn btn-success\"\n          style={{ width: 100 }}\n          onClick={this.props.start}\n        >\n          Start\n        </li>\n\n        <li\n          type=\"button\"\n          class=\"btn btn-danger\"\n          style={{ width: 100, backgroundColor: \"dark-red\" }}\n          onClick={this.props.pause}\n        >\n          Pause\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default StartStop;\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass About extends Component {\n  state = {};\n  render() {\n    const show = this.props.show;\n    const hide = this.props.hide;\n    return (\n      <Modal show={show} onHide={hide} centered>\n        <Modal.Header>\n          <Modal.Title>About</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p className=\"mini-margin\">\n            Conway's Game of Life (aka <em>Life</em>) was created by{\" \"}\n            <a href=\"https://en.wikipedia.org/wiki/John_Horton_Conway\">\n              {\" \"}\n              John Conway\n            </a>\n            . The idea is to simulate life in a 2d grid with a set of simple\n            rules:\n            <ol>\n              <li>A live cell with less than 2 living neighbours dies.</li>\n              <li>A live cell with 2 or 3 live neighbours survives.</li>\n              <li>A live cell with 4+ live neighbours dies.</li>\n              <li>A dead cell with 3 live neighbours comes back to life. </li>\n            </ol>\n          </p>\n\n          <div className=\"mini-margin\">\n            <hr />\n            <p>\n              To find out more about the game, see the{\" \"}\n              <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">\n                Wikipedia Page\n              </a>\n              .\n            </p>\n            <p>\n              This was produced by Robert Soane to get exposure to React JS. You\n              can find the code on my{\" \"}\n              <a href=\"https://github.com/robertpsoane/game-of-life\">GitHub</a>.\n              To see more of my work, checkout{\" \"}\n              <a href=\"https://robertpsoane.github.io\">robertsoane.me</a>.\n            </p>\n            <hr />\n            <p>\n              The original simpler version of this React app can be found{\" \"}\n              <a href=\"https://robertpsoane.github.io/game-of-life-v1/\">here</a>\n              .\n            </p>\n            <div class=\"alert alert-warning\" role=\"alert\">\n              Note: This is currently a work in progress.\n            </div>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            style={{ width: 100 }}\n            onClick={hide}\n          >\n            Close\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass instructions extends Component {\n  state = {};\n  render() {\n    const show = this.props.show;\n    const hide = this.props.hide;\n    return (\n      <Modal show={show} onHide={hide} centered>\n        <Modal.Header>\n          <Modal.Title>Instructions</Modal.Title>\n        </Modal.Header>\n        <div class=\"alert alert-danger\" role=\"alert\">\n          Note: This version is currently under construction. The original\n          version can be found{\" \"}\n          <a href=\"https://robertsoane.me/game-of-life-v1/\">here</a>.\n        </div>\n        <Modal.Body>\n          <ul>\n            <li>Click on the cells in the grid to switch their state.</li>\n            <li>\n              Black cells represent dead cells, and white cells represent alive\n              cells\n            </li>\n            <li>\n              Click <code>Start</code> to start the game, <code>Pause</code> to\n              stop the game, and <code>Reset</code> to reset the board{\" \"}\n            </li>\n            <li>The speed of the animation can be changed in settings.</li>\n          </ul>\n\n          <div class=\"alert alert-warning\" role=\"alert\">\n            These instructions can be brought up again from the Settings menu.\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            style={{ width: 100 }}\n            onClick={hide}\n          >\n            Ok\n          </button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default instructions;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport About from \"./about\";\nimport Instructions from \"./instructions\";\n\nclass Settings extends Component {\n  state = { showAbout: false, showHowTo: true };\n\n  showAbout() {\n    this.setState({ showAbout: true });\n  }\n\n  hideAbout() {\n    this.setState({ showAbout: false });\n  }\n\n  showHowTo() {\n    this.setState({ showHowTo: true });\n  }\n\n  hideHowTo() {\n    this.setState({ showHowTo: false });\n  }\n\n  render() {\n    return (\n      <ul class=\"btn-group controller\" role=\"group\">\n        <div className=\"dropdown\">\n          {/* Settings button */}\n          <div\n            class=\"btn btn-secondary dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Settings\n          </div>\n\n          {/* Settings Drop Down */}\n          <div\n            className=\"dropdown-menu dropdown-menu-right\"\n            aria-labelledby=\"dropdownMenuButton\"\n          >\n            <div className=\"dropdown-item\">\n              <label for=\"time-out-slider\" class=\"form-label\">\n                Speed\n              </label>\n              <br />\n              <input\n                type=\"range\"\n                class=\"form-range\"\n                id=\"time-out-slider\"\n                min=\"0\"\n                max=\"980\"\n                step=\"10\"\n                defaultValue=\"500\"\n                onChange={this.props.setTime}\n              ></input>\n            </div>\n            <hr />\n            <a\n              type=\"button\"\n              class=\"dropdown-item\"\n              onClick={() => {\n                this.showHowTo();\n              }}\n            >\n              Help\n            </a>\n            <a\n              type=\"button\"\n              class=\"dropdown-item\"\n              onClick={() => {\n                this.showAbout();\n              }}\n            >\n              About\n            </a>\n          </div>\n        </div>\n        {/** Modals go here */}\n        <About\n          show={this.state.showAbout}\n          hide={() => {\n            this.hideAbout();\n          }}\n        />\n        <Instructions\n          show={this.state.showHowTo}\n          hide={() => {\n            this.hideHowTo();\n          }}\n        />\n      </ul>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from \"react\";\n\nclass PatternLink extends Component {\n  render() {\n    const min_rows = this.props.patterns[this.props.pattern_arg].min_rows;\n    const min_cols = this.props.patterns[this.props.pattern_arg].min_cols;\n\n    const n_cols = this.props.grid_dims[0];\n    const n_rows = this.props.grid_dims[1];\n\n    const link_class =\n      n_rows >= min_rows && n_cols >= min_cols\n        ? \"dropdown-item\"\n        : \"dropdown-item disabled\";\n\n    return (\n      <a\n        type=\"button\"\n        className={link_class}\n        onClick={() => {\n          this.props.patternFunc(this.props.pattern_arg);\n        }}\n      >\n        {this.props.text}\n      </a>\n    );\n  }\n}\n\nclass Patterns extends Component {\n  state = {};\n  render() {\n    const patterns = this.props.pattern_grid;\n    const grid_dims = this.props.grid_dims;\n    return (\n      <div className=\"btn-group controller\" role=\"group\">\n        <div className=\"dropdown\">\n          {/* Settings button */}\n          <div\n            className=\"btn btn-secondary dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenuButton\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            Patterns\n          </div>\n\n          {/* Settings Drop Down */}\n          <div\n            className=\"dropdown-menu dropdown-menu\"\n            aria-labelledby=\"dropdownMenuButton\"\n          >\n            <PatternLink\n              text=\"Pulsar\"\n              pattern_arg=\"pulsar\"\n              grid_dims={grid_dims}\n              patterns={patterns}\n              patternFunc={this.props.pattern}\n            />\n            <PatternLink\n              text=\"Gosper Glider Gun\"\n              grid_dims={grid_dims}\n              pattern_arg=\"gosper\"\n              patterns={patterns}\n              patternFunc={this.props.pattern}\n            />\n            <PatternLink\n              text=\"TEST\"\n              grid_dims={grid_dims}\n              pattern_arg=\"test\"\n              patterns={patterns}\n              patternFunc={this.props.pattern}\n            />\n          </div>\n        </div>\n        {/** Modals go here */}\n      </div>\n    );\n  }\n}\n\nexport default Patterns;\n","import React, { Component } from \"react\";\nimport Reset from \"./reset\";\nimport StartStop from \"./startstop\";\nimport Settings from \"./settings\";\nimport Patterns from \"./patterns\";\n\nclass NavBar extends Component {\n  state = {};\n  // Note could be bg-info instead of primary for navbar\n  render() {\n    return (\n      <nav id=\"navBar\" className=\"navbar  navbar-dark bg-primary\">\n        <div className=\"container-md navbar-brand\">\n          <h3>The Game of Life</h3>\n          <StartStop start={this.props.start} pause={this.props.pause} />\n          <Reset reset={this.props.reset} />\n          <Patterns\n            pattern_grid={this.props.pattern_grid}\n            pattern={this.props.pattern}\n            grid_dims={this.props.grid_dims}\n          />\n          <Settings setTime={this.props.timeOut} />\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport Cell from \"./cell/cell\";\nimport Navbar from \"./controls/navbar\";\nimport \"./gameOfLife.css\";\nimport $ from \"jquery\";\n\nconst GRIDSIZE = 25;\n\nconst PATTERN_GRIDS = {\n  gosper: {\n    grid: [\n      [0, -6],\n      [-1, -5],\n      [-1, -6],\n      [-1, -7],\n      [-2, -4],\n      [-2, -8],\n      [-3, -6],\n      [-4, -3],\n      [-5, -3],\n      [-6, -4],\n      [-7, -5],\n      [-7, -6],\n      [-7, -7],\n      [-4, -9],\n      [-5, -9],\n      [-6, -8],\n      [-16, -6],\n      [-16, -7],\n      [-17, -6],\n      [-17, -7],\n      [3, -7],\n      [3, -8],\n      [3, -9],\n      [4, -7],\n      [4, -8],\n      [4, -9],\n      [5, -6],\n      [5, -10],\n      [7, -5],\n      [7, -6],\n      [7, -10],\n      [7, -11],\n      [17, -8],\n      [17, -9],\n      [18, -8],\n      [18, -9],\n    ],\n    min_rows: 22,\n    min_cols: 36,\n  },\n  pulsar: {\n    grid: [\n      [-1, 2],\n      [-1, 3],\n      [-1, 4],\n      [-1, -2],\n      [-1, -3],\n      [-1, -4],\n      [1, 2],\n      [1, 3],\n      [1, 4],\n      [1, -2],\n      [1, -3],\n      [1, -4],\n      [2, 1],\n      [3, 1],\n      [4, 1],\n      [-2, 1],\n      [-3, 1],\n      [-4, 1],\n      [2, -1],\n      [3, -1],\n      [4, -1],\n      [-2, -1],\n      [-3, -1],\n      [-4, -1],\n      [2, 6],\n      [3, 6],\n      [4, 6],\n      [-2, 6],\n      [-3, 6],\n      [-4, 6],\n      [2, -6],\n      [3, -6],\n      [4, -6],\n      [-2, -6],\n      [-3, -6],\n      [-4, -6],\n      [-6, 2],\n      [-6, 3],\n      [-6, 4],\n      [-6, -2],\n      [-6, -3],\n      [-6, -4],\n      [6, 2],\n      [6, 3],\n      [6, 4],\n      [6, -2],\n      [6, -3],\n      [6, -4],\n    ],\n    min_rows: 8,\n    min_cols: 8,\n  },\n  test: { grid: [[0, 0]], min_rows: 1, min_cols: 1 },\n};\n\nclass GameOfLife extends Component {\n  /** Main entry point to the app. */\n\n  // Maintains state of grid, timeout, whether game is running and\n  // whether mouse button currently down\n  state = {\n    grid: [],\n    mouseDown: false,\n    running: false,\n    timeOut: 500,\n    neighbours: [\n      [1, 1],\n      [1, 0],\n      [1, -1],\n      [0, -1],\n      [-1, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, 1],\n    ],\n  };\n\n  getWidthHeight() {\n    let height;\n    let width;\n    const navHeight = $(\"#navBar\").height();\n    // Just window height\n    const docHeight = Math.max($(window).height());\n    // maximum height\n    // const docHeight = Math.max($(document).height(), $(window).height());\n\n    height = Math.floor((docHeight - navHeight) / GRIDSIZE) - 1;\n\n    width =\n      Math.floor(Math.max($(document).width(), $(window).width()) / GRIDSIZE) -\n      1;\n\n    return [width, height];\n  }\n\n  componentDidMount() {\n    /** Runs on load.  Creates grid and sets initial states.  Also used for\n     * resetting app  */\n    const dims = this.getWidthHeight();\n    const grid = this.makeGrid(dims[0], dims[1]);\n    this.setState({ grid: grid, mouseDown: false, running: false, dims: dims });\n  }\n\n  handleMouseDown(row, col) {\n    /** Called by cells when clicked - sets mouseDown to true and starts\n     * to change state */\n    this.setState({ mouseDown: true, grid: this.changeCell(row, col) });\n  }\n\n  handleMouseUp() {\n    /** Sets mouseDown false when mouse button released */\n    this.setState({ mouseDown: false });\n  }\n\n  setTimeOut() {\n    const new_time = 1000 - $(\"#time-out-slider\").val();\n    this.setState({ timeOut: new_time });\n  }\n\n  handleMouseEnter(row, col) {\n    /** Called when mouse over a cell.  If mouse is down, then 'clicks' cell */\n    if (!this.state.mouseDown) return;\n    this.handleMouseDown(row, col);\n  }\n\n  // Pattern Handlers\n  handlePattern(patternType) {\n    const livingCells = PATTERN_GRIDS[patternType][\"grid\"];\n    const center = this.getMidPoint();\n    const grid = this.state.grid;\n    livingCells.forEach((cell) => {\n      const centerRow = center[1];\n      const centerCol = center[0];\n      const shiftRow = cell[1];\n      const shiftCol = cell[0];\n\n      grid[centerRow + shiftRow][centerCol + shiftCol][0] = 1;\n    });\n    this.setState({ grid: grid });\n  }\n\n  getMidPoint() {\n    const dims = this.state.dims;\n\n    const xCenter = Math.floor(dims[0] / 2);\n    const yCenter = Math.floor(dims[1] / 2);\n\n    return [xCenter, yCenter];\n  }\n\n  changeCell(row, col) {\n    /** Takes a cell and flips value from alive to dead and vice\n     * versa */\n\n    let newGrid = this.state.grid;\n    // updates grid switching value of element\n    if (newGrid[row][col][0] === 0) {\n      newGrid[row][col][0] = 1;\n    } else {\n      newGrid[row][col][0] = 0;\n    }\n    return newGrid;\n  }\n\n  makeGrid = (x, y) => {\n    /** Produces a grid of dead cells with x columns and y rows */\n    const grid = [];\n    for (let row = 0; row < y; row++) {\n      const currentRow = [];\n      for (let col = 0; col < x; col++) {\n        currentRow.push([0]);\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n\n  startGame() {\n    /** Starts running game:\n     * - Sets running state to true\n     * - Sets timeout to run a step after the timeout\n     */\n    this.setState({ running: true });\n    this.timeoutHandler = window.setTimeout(() => {\n      this.runStep();\n    }, this.state.timeOut);\n  }\n\n  pauseGame() {\n    /** Stops running game */\n    this.setState({ running: false });\n  }\n\n  countLivingNeighbours(grid, row, col) {\n    /** Counts number of direct neighbours to a cell that are alive on\n     * a given grid.  Uses neighbours vector to store al permutations\n     */\n    const dims = this.state.dims;\n    const neighbours = this.state.neighbours;\n    let count = 0;\n    for (let i = 0; i < 8; i++) {\n      const neighbour = neighbours[i];\n      const rown = row + neighbour[0];\n      const coln = col + neighbour[1];\n      if (rown > 0 && coln > 0 && rown < dims[1] && coln < dims[0]) {\n        if (grid[rown][coln][0] === 1) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n  runStep() {\n    /** Runs a generation of the Game of Life\n     * - Checks if running\n     * - Iterates over grid, building the grid for the next generation\n     * based on rules of game of life\n     * - Sets a timeout to run again\n     */\n    if (!this.state.running) {\n      return;\n    }\n    const dims = this.state.dims;\n    let oldGrid = this.state.grid;\n    let newGrid = [];\n\n    for (let row = 0; row < dims[1]; row++) {\n      let newRow = [];\n      for (let col = 0; col < dims[0]; col++) {\n        if (oldGrid[row][col][0] === 0) {\n          if (this.countLivingNeighbours(oldGrid, row, col) === 3) {\n            newRow.push([1]);\n          } else {\n            newRow.push([0]);\n          }\n        } else {\n          const living = this.countLivingNeighbours(oldGrid, row, col);\n\n          if ((living === 2) | (living === 3)) {\n            newRow.push([1]);\n          } else {\n            newRow.push([0]);\n          }\n        }\n      }\n      newGrid.push(newRow);\n    }\n    this.setState({ grid: newGrid });\n\n    this.timeoutHandler = window.setTimeout(() => {\n      console.log(this.state.timeOut);\n      this.runStep();\n    }, this.state.timeOut);\n  }\n\n  render() {\n    /** render function - renders game of life on screen */\n    const { grid } = this.state;\n\n    let dims;\n    if (typeof this.state.dims !== \"undefined\") {\n      dims = this.state.dims;\n    } else {\n      dims = this.getWidthHeight();\n    }\n\n    return (\n      <div>\n        {/* Adding header component with Game of Life info */}\n        <header>\n          <Navbar\n            grid_dims={dims}\n            pattern={(p) => this.handlePattern(p)}\n            pattern_grid={PATTERN_GRIDS}\n            reset={() => this.componentDidMount()}\n            start={() => this.startGame()}\n            pause={() => this.pauseGame()}\n            timeOut={() => this.setTimeOut()}\n          />\n        </header>\n        {/* Adding controls to grid board */}\n\n        {/* Render grid of divs representing our board */}\n        <div className=\"board\">\n          {grid.map((row, rowIdx) => {\n            return (\n              <div key={rowIdx} className=\"cellrow\">\n                {row.map((col, colIdx) => {\n                  const cell_id = [rowIdx, colIdx];\n                  // Passes life prop to div based on value of element\n                  // on grid array\n                  const life =\n                    this.state.grid[rowIdx][colIdx][0] === 1 ? \"alive\" : \"dead\";\n\n                  return (\n                    <Cell\n                      key={cell_id}\n                      id={cell_id}\n                      life={life}\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\n                      onMouseEnter={(row, col) =>\n                        this.handleMouseEnter(row, col)\n                      }\n                      onMouseUp={(row, col) => this.handleMouseUp()}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameOfLife;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport GameOfLife from \"./components/gameOfLife\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"App\">\n        <GameOfLife />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}