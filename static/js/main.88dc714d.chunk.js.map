{"version":3,"sources":["components/gameOfLife/cell/cell.jsx","components/gameOfLife/headerfooter/header.jsx","components/gameOfLife/headerfooter/footer.jsx","components/gameOfLife/gameOfLife.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","state","id","props","divId","styling","backgroundColor","onMouseDown","this","onMouseEnter","onMouseUp","life","className","style","onContextMenu","e","preventDefault","Component","Header","class","href","display","fontStyle","role","Footer","Controls","aria-label","type","width","onClick","start","pause","reset","GameOfLife","grid","mouseDown","running","makeGrid","x","y","row","currentRow","col","push","setState","changeCell","console","log","handleMouseDown","newGrid","componentDidMount","startGame","pauseGame","map","rowIdx","colIdx","cell_id","handleMouseEnter","handleMouseUp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAqCeA,E,4MAjCbC,MAAQ,CACNC,GAAI,EAAKC,MAAMD,GACfE,MAAO,QAAU,EAAKD,MAAMD,GAAG,GAAK,IAAM,EAAKC,MAAMD,GAAG,I,EAE1DG,QAAU,CACRC,gBAAiB,S,iDAGnB,WACE,OAAO,I,oBAGT,WAAU,IAAD,OACDC,EAAcC,KAAKL,MAAMI,YACzBE,EAAeD,KAAKL,MAAMM,aAC1BC,EAAYF,KAAKL,MAAMO,UACvBL,EAAU,CACdC,gBAAqC,SAApBE,KAAKL,MAAMQ,KAAkB,QAAU,SAE1D,OACE,qBACET,GAAIM,KAAKP,MAAMG,MACfQ,UAAU,OACVC,MAAOR,EACPE,YAAa,kBAAMA,EAAY,EAAKN,MAAMC,GAAG,GAAI,EAAKD,MAAMC,GAAG,KAC/DO,aAAc,kBAAMA,EAAa,EAAKR,MAAMC,GAAG,GAAI,EAAKD,MAAMC,GAAG,KACjEQ,UAAW,kBAAMA,KACjBI,cAAe,SAACC,GAAD,OAAOA,EAAEC,wB,GA5BbC,aCqCJC,E,4MArCbjB,MAAQ,G,4CACR,WACE,OACE,gCACE,iCACE,yDAEF,oBAAGkB,MAAM,cAAT,wCAC6B,sCAD7B,mBAC2D,IACzD,oBAAGC,KAAK,mDAAR,UACG,IADH,iBAFF,0EAQE,qBACEP,MAAO,CACLQ,QAAS,SACTC,UAAW,UAHf,UAME,sFACA,mFACA,2EACA,4FAjBJ,6IAsBA,qBAAKH,MAAM,sBAAsBI,KAAK,QAAtC,gE,GA9BaN,aCqBNO,E,4MApBbvB,MAAQ,G,4CACR,WACE,OACE,sBAAKkB,MAAM,cAAX,UACE,yEAC2C,IACzC,mBAAGC,KAAK,wDAAR,4BAFF,OAOA,2FAC6D,IAC3D,mBAAGA,KAAK,yBAAR,sC,GAdWH,aCOfQ,G,kNACJxB,MAAQ,G,4CACR,WACE,OACE,qBAAKkB,MAAM,cAAX,SACE,sBAAKA,MAAM,aAAaI,KAAK,QAAQG,aAAW,gBAAhD,UACE,wBACEC,KAAK,SACLR,MAAM,kBACNN,MAAO,CAAEe,MAAO,KAChBC,QAASrB,KAAKL,MAAM2B,MAJtB,mBASA,wBACEH,KAAK,SACLR,MAAM,kBACNN,MAAO,CAAEe,MAAO,KAChBC,QAASrB,KAAKL,MAAM4B,MAJtB,mBASA,wBACEJ,KAAK,SACLR,MAAM,oBACNN,MAAO,CAAEe,MAAO,KAChBC,QAASrB,KAAKL,MAAM6B,MAJtB,4B,GAxBaf,cAgKRgB,E,4MAzHbhC,MAAQ,CACNiC,KAAM,GACNC,WAAW,EACXC,SAAS,G,EAiDXC,SAAW,SAACC,EAAGC,GAGb,IADA,IAAML,EAAO,GACJM,EAAM,EAAGA,EAAMD,EAAGC,IAAO,CAEhC,IADA,IAAMC,EAAa,GACVC,EAAM,EAAGA,EAAMJ,EAAGI,IACzBD,EAAWE,KAAK,CAAC,IAEnBT,EAAKS,KAAKF,GAEZ,OAAOP,G,uDAvDT,WACE,IAAMA,EAAO1B,KAAK6B,SAlDR,GACC,IAkDX7B,KAAKoC,SAAS,CAAEV,KAAMA,IACtB1B,KAAKoC,SAAS,CAAET,WAAW,M,6BAI7B,SAAgBK,EAAKE,GACnBlC,KAAKoC,SAAS,CAAET,WAAW,IAC3B3B,KAAKoC,SAAS,CAAEV,KAAM1B,KAAKqC,WAAWL,EAAKE,O,2BAG7C,WACElC,KAAKoC,SAAS,CAAET,WAAW,M,8BAG7B,SAAiBK,EAAKE,GACpBI,QAAQC,IAAIvC,KAAKP,MAAMkC,WAClB3B,KAAKP,MAAMkC,WAChB3B,KAAKwC,gBAAgBR,EAAKE,K,wBAG5B,SAAWF,EAAKE,GACd,IAAIO,EAAUzC,KAAKP,MAAMiC,KAOzB,OAL6B,IAAzBe,EAAQT,GAAKE,GAAK,GACpBO,EAAQT,GAAKE,GAAK,GAAK,EAEvBO,EAAQT,GAAKE,GAAK,GAAK,EAElBO,I,uBA4BT,WACEH,QAAQC,IAAI,a,uBAGd,WACED,QAAQC,IAAI,UACZvC,KAAKoC,SAAS,CAAER,SAAS,M,oBAG3B,WAAU,IAAD,OACCF,EAAS1B,KAAKP,MAAdiC,KACR,OACE,gCAEE,iCACE,cAAC,EAAD,MAGF,cAAC,EAAD,CACEF,MAAO,kBAAM,EAAKkB,qBAClBpB,MAAO,kBAAM,EAAKqB,aAClBpB,MAAO,kBAAM,EAAKqB,eAEpB,qBAAKxC,UAAU,QAAf,SACGsB,EAAKmB,KAAI,SAACb,EAAKc,GACd,OACE,qBAAkB1C,UAAU,UAA5B,SACG4B,EAAIa,KAAI,SAACX,EAAKa,GACb,IAAMC,EAAU,CAACF,EAAQC,GAEnB5C,EACmC,IAAvC,EAAKV,MAAMiC,KAAKoB,GAAQC,GAAQ,GAAW,QAAU,OAEvD,OACE,cAAC,EAAD,CAEErD,GAAIsD,EACJ7C,KAAMA,EACNJ,YAAa,SAACiC,EAAKE,GAAN,OAAc,EAAKM,gBAAgBR,EAAKE,IACrDjC,aAAc,SAAC+B,EAAKE,GAAN,OACZ,EAAKe,iBAAiBjB,EAAKE,IAE7BhC,UAAW,SAAC8B,EAAKE,GAAN,OAAc,EAAKgB,kBAPzBF,OATHF,QAwBhB,cAAC,EAAD,W,GApHiBrC,aC/BV0C,E,4MAVb1D,MAAQ,G,4CACR,WACE,OACE,qBAAKW,UAAU,MAAf,SACE,cAAC,EAAD,U,GALUK,aCOH2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88dc714d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./cell.css\";\n\nclass Cell extends Component {\n  state = {\n    id: this.props.id,\n    divId: \"cell:\" + this.props.id[0] + \",\" + this.props.id[1],\n  };\n  styling = {\n    backgroundColor: \"black\",\n  };\n\n  contextMenu() {\n    return false;\n  }\n\n  render() {\n    const onMouseDown = this.props.onMouseDown;\n    const onMouseEnter = this.props.onMouseEnter;\n    const onMouseUp = this.props.onMouseUp;\n    const styling = {\n      backgroundColor: this.props.life === \"dead\" ? \"black\" : \"white\",\n    };\n    return (\n      <div\n        id={this.state.divId}\n        className=\"cell\"\n        style={styling}\n        onMouseDown={() => onMouseDown(this.state.id[0], this.state.id[1])}\n        onMouseEnter={() => onMouseEnter(this.state.id[0], this.state.id[1])}\n        onMouseUp={() => onMouseUp()}\n        onContextMenu={(e) => e.preventDefault()}\n      ></div>\n    );\n  }\n}\n\nexport default Cell;\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>Conway's Game of Life</h1>\n        </header>\n        <p class=\"mini-margin\">\n          Conway's Game of Life (aka <em>Life</em>) was created by{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/John_Horton_Conway\">\n            {\" \"}\n            John Conway\n          </a>\n          . The idea is to simulate life in a 2d grid with a set of simple\n          rules:\n          <ul\n            style={{\n              display: \"inline\",\n              fontStyle: \"italic\",\n            }}\n          >\n            <li>A live cell with less than 2 living neighbours dies.</li>\n            <li>A live cell with 2 or 3 live neighbours survives.</li>\n            <li>A live cell with 4+ live neighbours dies.</li>\n            <li>A dead cell with 3 live neighbours comes back to life. </li>\n          </ul>\n          To use this simulation, click on the cells in the grid to bring them\n          to life, and click the start button below to start the simulation.\n        </p>\n        <div class=\"alert alert-warning\" role=\"alert\">\n          Note: This is currently a work in progress.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  state = {};\n  render() {\n    return (\n      <div class=\"mini-margin\">\n        <p>\n          To find out more about the game, see the{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">\n            Wikipedia Page\n          </a>\n          .\n        </p>\n        <p>\n          Produced by Robert Soane. To see more of my work, checkout{\" \"}\n          <a href=\"https://robertsoane.me\">robertsoane.me</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Cell from \"./cell/cell\";\nimport Header from \"./headerfooter/header\";\nimport Footer from \"./headerfooter/footer\";\nimport \"./gameOfLife.css\";\n\nconst WIDTH = 50;\nconst HEIGHT = 25;\n\nclass Controls extends Component {\n  state = {};\n  render() {\n    return (\n      <div class=\"mini-margin\">\n        <div class=\"btn-group \" role=\"group\" aria-label=\"Basic example\">\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            style={{ width: 100 }}\n            onClick={this.props.start}\n          >\n            Start\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            style={{ width: 100 }}\n            onClick={this.props.pause}\n          >\n            Pause\n          </button>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            style={{ width: 100 }}\n            onClick={this.props.reset}\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass GameOfLife extends Component {\n  state = {\n    grid: [],\n    mouseDown: false,\n    running: false,\n  };\n\n  // Makes grid on load\n  componentDidMount() {\n    const grid = this.makeGrid(WIDTH, HEIGHT);\n    this.setState({ grid: grid });\n    this.setState({ mouseDown: false });\n  }\n\n  // Handles mouse down on grid\n  handleMouseDown(row, col) {\n    this.setState({ mouseDown: true });\n    this.setState({ grid: this.changeCell(row, col) });\n  }\n\n  handleMouseUp() {\n    this.setState({ mouseDown: false });\n  }\n\n  handleMouseEnter(row, col) {\n    console.log(this.state.mouseDown);\n    if (!this.state.mouseDown) return;\n    this.handleMouseDown(row, col);\n  }\n\n  changeCell(row, col) {\n    let newGrid = this.state.grid;\n    // updates grid switching value of element\n    if (newGrid[row][col][0] === 0) {\n      newGrid[row][col][0] = 1;\n    } else {\n      newGrid[row][col][0] = 0;\n    }\n    return newGrid;\n  }\n\n  //   makeAlive(row, col) {\n  //     let newGrid = this.state.grid;\n  //     newGrid[row][col][0] = 1;\n  //     return newGrid;\n  //   }\n\n  //   makeDead(row, col) {\n  //     let newGrid = this.state.grid;\n  //     newGrid[row][col][0] = 0;\n  //     return newGrid;\n  //   }\n\n  makeGrid = (x, y) => {\n    // Produces array of dead cells on a grid\n    const grid = [];\n    for (let row = 0; row < y; row++) {\n      const currentRow = [];\n      for (let col = 0; col < x; col++) {\n        currentRow.push([0]);\n      }\n      grid.push(currentRow);\n    }\n    return grid;\n  };\n\n  startGame() {\n    console.log(\"started\");\n  }\n\n  pauseGame() {\n    console.log(\"paused\");\n    this.setState({ running: false });\n  }\n\n  render() {\n    const { grid } = this.state;\n    return (\n      <div>\n        {/* Adding header with details etc */}\n        <header>\n          <Header />\n        </header>\n        {/* Adding grid board */}\n        <Controls\n          reset={() => this.componentDidMount()}\n          start={() => this.startGame()}\n          pause={() => this.pauseGame()}\n        />\n        <div className=\"board\">\n          {grid.map((row, rowIdx) => {\n            return (\n              <div key={rowIdx} className=\"cellrow\">\n                {row.map((col, colIdx) => {\n                  const cell_id = [rowIdx, colIdx];\n\n                  const life =\n                    this.state.grid[rowIdx][colIdx][0] === 1 ? \"alive\" : \"dead\";\n\n                  return (\n                    <Cell\n                      key={cell_id}\n                      id={cell_id}\n                      life={life}\n                      onMouseDown={(row, col) => this.handleMouseDown(row, col)}\n                      onMouseEnter={(row, col) =>\n                        this.handleMouseEnter(row, col)\n                      }\n                      onMouseUp={(row, col) => this.handleMouseUp()}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default GameOfLife;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport GameOfLife from \"./components/gameOfLife/gameOfLife\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"App\">\n        <GameOfLife />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}